{
    "openapi": "3.0.0",
    "info": {
        "title": "Garden API",
        "version": "1.0.0",
        "description": "This document outlines the REST API endpoints for initiating, redeeming swaps and creating orders.",
        "license": {
            "name": "Closed Source",
            "url": "https://evm-swapper-relay.onrender.com"
        }
    },
    "servers": [
        {
            "url": "https://evm-swapper-relay.onrender.com"
        }
    ],
    "security": [],
    "paths": {
        "/id/unmatched/{id}": {
            "get": {
                "operationId": "getUnmatchedOrderById",
                "summary": "Retrieve an unmatched order by its create ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The create ID of the unmatched order"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The unmatched order.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Ok"
                                        },
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "12345"
                                                },
                                                "user": {
                                                    "type": "string",
                                                    "example": "0xAbC12345D67890Ef"
                                                },
                                                "createdAt": {
                                                    "type": "string",
                                                    "example": "2024-12-13T12:34:56Z"
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "example": 100.5
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Invalid or missing parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid ID or missing parameters"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/unmatched/{user}": {
            "get": {
                "operationId": "getUnmatchedOrdersByUser",
                "summary": "Retrieve all unmatched orders for a specific user.",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The user's address"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        },
                        "description": "Number of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The paginated unmatched orders for the user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Ok"
                                        },
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "12345"
                                                            },
                                                            "user": {
                                                                "type": "string",
                                                                "example": "0xAbC12345D67890Ef"
                                                            },
                                                            "createdAt": {
                                                                "type": "string",
                                                                "example": "2024-12-13T12:34:56Z"
                                                            },
                                                            "amount": {
                                                                "type": "number",
                                                                "example": 100.5
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Invalid or missing parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid user address or pagination parameters"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matched": {
            "get": {
                "operationId": "getAllMatchedOrders",
                "summary": "Retrieve all matched orders with pagination.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        },
                        "description": "Number of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The paginated matched orders.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Ok"
                                        },
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "12345"
                                                            },
                                                            "user": {
                                                                "type": "string",
                                                                "example": "0xAbC12345D67890Ef"
                                                            },
                                                            "createdAt": {
                                                                "type": "string",
                                                                "example": "2024-12-13T12:34:56Z"
                                                            },
                                                            "amount": {
                                                                "type": "number",
                                                                "example": 100.5
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Invalid or missing parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid pagination parameters"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/unmatched": {
            "get": {
                "operationId": "getAllUnmatchedOrders",
                "summary": "Retrieve all unmatched orders with pagination.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        },
                        "description": "Number of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The paginated unmatched orders.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Ok"
                                        },
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "12345"
                                                            },
                                                            "user": {
                                                                "type": "string",
                                                                "example": "0xAbC12345D67890Ef"
                                                            },
                                                            "createdAt": {
                                                                "type": "string",
                                                                "example": "2024-12-13T12:34:56Z"
                                                            },
                                                            "amount": {
                                                                "type": "number",
                                                                "example": 100.5
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Invalid or missing parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid pagination parameters"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/id/matched/{id}": {
            "get": {
                "operationId": "getMatchedOrderById",
                "summary": "Retrieve a matched order by its create ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The create ID of the matched order"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The matched order.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Ok"
                                        },
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "12345"
                                                },
                                                "user": {
                                                    "type": "string",
                                                    "example": "0xAbC12345D67890Ef"
                                                },
                                                "matchedAt": {
                                                    "type": "string",
                                                    "example": "2024-12-13T12:34:56Z"
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "example": 100.5
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "Matched"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Invalid or missing parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid ID or missing parameters"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/matched/{user}": {
            "get": {
                "operationId": "getMatchedOrdersByUser",
                "summary": "Retrieve all matched orders for a specific user.",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The user's address"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        },
                        "description": "Number of items per page"
                    },
                    {
                        "name": "pending",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "User pending actions"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The paginated matched orders for the user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Ok"
                                        },
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "12345"
                                                            },
                                                            "user": {
                                                                "type": "string",
                                                                "example": "0xAbC12345D67890Ef"
                                                            },
                                                            "matchedAt": {
                                                                "type": "string",
                                                                "example": "2024-12-13T12:34:56Z"
                                                            },
                                                            "amount": {
                                                                "type": "number",
                                                                "example": 100.5
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "Matched"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Invalid or missing parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid user address or pagination parameters"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/count/{user}": {
            "get": {
                "operationId": "getOrderCountByUser",
                "summary": "Get the total number of orders for a specific user.",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The user's address"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The total number of orders for the user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Ok"
                                        },
                                        "result": {
                                            "type": "integer",
                                            "example": 15
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Invalid or missing parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid user address"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}