{
    "openapi": "3.0.0",
    "info": {
        "title": "Orderbook API",
        "version": "1.0.0",
        "description": "This document outlines the REST API endpoints for initiating, redeeming swaps and creating orders."
    },
    "paths": {
        "/id/unmatched/{id}": {
            "get": {
                "summary": "Retrieve an unmatched order by its create ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The create ID of the unmatched order"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CreateOrder",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseCreateOrder"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/unmatched/{user}": {
            "get": {
                "summary": "Retrieve all unmatched orders for a specific user.",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The user's address"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        },
                        "description": "Number of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PaginatedData<CreateOrder>",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponsePaginatedCreateOrder"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matched": {
            "get": {
                "summary": "Retrieve all matched orders with pagination.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        },
                        "description": "Number of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PaginatedData<MatchedOrderVerbose>",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponsePaginatedMatchedOrderVerbose"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/unmatched": {
            "get": {
                "summary": "Retrieve all unmatched orders with pagination.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        },
                        "description": "Number of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PaginatedData<CreateOrder>",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponsePaginatedCreateOrder"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/id/matched/{id}": {
            "get": {
                "summary": "Retrieve a matched order by its create ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The create ID of the matched order"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MatchedOrderVerbose | null",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseMatchedOrderVerbose"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/matched/{user}": {
            "get": {
                "summary": "Retrieve all matched orders for a specific user.",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The user's address"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        },
                        "description": "Number of items per page"
                    },
                    {
                        "name": "pending",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "User pending actions"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PaginatedData<MatchedOrderVerbose>",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponsePaginatedMatchedOrderVerbose"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/count/{user}": {
            "get": {
                "summary": "Get the total number of orders for a specific user.",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The user's address"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Number of orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseNumber"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ApiResponseCreateOrder": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "Ok",
                            "Error"
                        ]
                    },
                    "result": {
                        "$ref": "#/components/schemas/CreateOrder"
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "ApiResponsePaginatedCreateOrder": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "Ok",
                            "Error"
                        ]
                    },
                    "result": {
                        "$ref": "#/components/schemas/PaginatedDataCreateOrder"
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "ApiResponsePaginatedMatchedOrderVerbose": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "Ok",
                            "Error"
                        ]
                    },
                    "result": {
                        "$ref": "#/components/schemas/PaginatedDataMatchedOrderVerbose"
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "ApiResponseMatchedOrderVerbose": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "Ok",
                            "Error"
                        ]
                    },
                    "result": {
                        "$ref": "#/components/schemas/MatchedOrderVerbose"
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "ApiResponseNumber": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "Ok",
                            "Error"
                        ]
                    },
                    "result": {
                        "type": "number"
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "Ok",
                            "Error"
                        ]
                    },
                    "error": {
                        "type": "string"
                    }
                }
            },
            "CreateOrder": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": "string",
                        "nullable": true
                    },
                    "create_id": {
                        "type": "string"
                    },
                    "block_number": {
                        "type": "string"
                    },
                    "source_chain": {
                        "type": "string"
                    },
                    "destination_chain": {
                        "type": "string"
                    },
                    "source_asset": {
                        "type": "string"
                    },
                    "destination_asset": {
                        "type": "string"
                    },
                    "initiator_source_address": {
                        "type": "string"
                    },
                    "initiator_destination_address": {
                        "type": "string"
                    },
                    "source_amount": {
                        "type": "string"
                    },
                    "destination_amount": {
                        "type": "string"
                    },
                    "fee": {
                        "type": "string"
                    },
                    "nonce": {
                        "type": "string"
                    },
                    "min_destination_confirmations": {
                        "type": "integer"
                    },
                    "timelock": {
                        "type": "integer"
                    },
                    "secret_hash": {
                        "type": "string"
                    },
                    "additional_data": {
                        "type": "object",
                        "properties": {
                            "bitcoin_optional_recipient": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "SingleSwap": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": "string",
                        "nullable": true
                    },
                    "swap_id": {
                        "type": "string"
                    },
                    "chain": {
                        "type": "string"
                    },
                    "asset": {
                        "type": "string"
                    },
                    "initiator": {
                        "type": "string"
                    },
                    "redeemer": {
                        "type": "string"
                    },
                    "timelock": {
                        "type": "integer"
                    },
                    "filled_amount": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string"
                    },
                    "secret_hash": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    },
                    "initiate_tx_hash": {
                        "type": "string"
                    },
                    "redeem_tx_hash": {
                        "type": "string"
                    },
                    "refund_tx_hash": {
                        "type": "string"
                    },
                    "initiate_block_number": {
                        "type": "string",
                        "nullable": true
                    },
                    "redeem_block_number": {
                        "type": "string",
                        "nullable": true
                    },
                    "refund_block_number": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "MatchedOrderVerbose": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": "string",
                        "nullable": true
                    },
                    "source_swap": {
                        "$ref": "#/components/schemas/SingleSwap"
                    },
                    "destination_swap": {
                        "$ref": "#/components/schemas/SingleSwap"
                    },
                    "create_order": {
                        "$ref": "#/components/schemas/CreateOrder"
                    }
                }
            },
            "PaginatedDataCreateOrder": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateOrder"
                        }
                    },
                    "page": {
                        "type": "integer"
                    },
                    "total_pages": {
                        "type": "integer"
                    },
                    "total_items": {
                        "type": "integer"
                    },
                    "per_page": {
                        "type": "integer"
                    }
                }
            },
            "PaginatedDataMatchedOrderVerbose": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatchedOrderVerbose"
                        }
                    },
                    "page": {
                        "type": "integer"
                    },
                    "total_pages": {
                        "type": "integer"
                    },
                    "total_items": {
                        "type": "integer"
                    },
                    "per_page": {
                        "type": "integer"
                    }
                }
            }
        }
    }
}