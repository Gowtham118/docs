{
    "post": {
        "operationId": "createOrder",
        "summary": "Create Order",
        "description": "Creates a new cross-chain swap order with specified parameters and strategy details.",
        "requestBody": {
            "required": true,
            "content": {
                "application/json": {
                    "schema": {
                        "type": "object",
                        "properties": {
                            "source_chain": {
                                "type": "string",
                                "description": "The blockchain network where the swap originates."
                            },
                            "destination_chain": {
                                "type": "string",
                                "description": "The blockchain network where the swap completes."
                            },
                            "source_asset": {
                                "type": "string",
                                "description":"The asset being swapped on the source blockchain."
                            },
                            "destination_asset": {
                                "type": "string",
                                "description":"The asset to be received on the destination blockchain."
                            },
                            "initiator_source_address": {
                                "type": "string",
                                "description":"The wallet address initiating the swap on the source blockchain."
                            },
                            "initiator_destination_address": {
                                "type": "string",
                                "description": "The wallet address to receive the asset on the destination blockchain."
                            },
                            "source_amount": {
                                "type": "string",
                                "description": "The amount of the asset being swapped on the source blockchain."
                            },
                            "destination_amount": {
                                "type": "string",
                                "description": "The amount of the asset expected on the destination blockchain."
                            },
                            "fee": {
                                "type": "string",
                                "description": "The total cost associated with the swap transaction."
                            },
                            "nonce": {
                                "type": "string",
                                "description": "A unique identifier for the swap transaction to prevent duplication."
                            },
                            "min_destination_confirmations": {
                                "type": "integer",
                                "description": "The minimum number of confirmations required on the destination blockchain to finalize the swap."
                            },
                            "timelock": {
                                "type": "integer",
                                "description": "A timeout period after which the swap expires if not completed."
                            },
                            "secret_hash": {
                                "type": "string",
                                "description": "A cryptographic hash used to verify the transaction's security."
                            },
                            "additional_data": {
                                "type": "object",
                                "properties": {
                                    "strategy_id": {
                                        "type": "string",
                                        "description": "Provided by the quote server"
                                    },
                                    "input_token_price": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "Provided by the quote server"
                                    },
                                    "output_token_price": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "Provided by the quote server"
                                    },
                                    "deadline": {
                                        "type": "string",
                                        "description": "Validity till the current quote is valid"
                                    },
                                    "bitcoin_optional_recipient": {
                                        "type": "string",
                                        "description": "An optional Bitcoin address to receive the output token, if specified."
                                    }
                                },
                                "additionalProperties": false
                            }
                        },
                        "required": [
                            "source_chain",
                            "destination_chain",
                            "source_asset",
                            "destination_asset",
                            "initiator_source_address",
                            "initiator_destination_address",
                            "source_amount",
                            "destination_amount",
                            "fee",
                            "nonce",
                            "min_destination_confirmations",
                            "timelock",
                            "secret_hash",
                            "additional_data"
                        ]
                    }
                }
            }
        },
        "responses": {
            "200": {
                "description": "Order created successfully",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "Ok"
                                    ]
                                },
                                "result": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "400": {
                "description": "Bad request",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "Error"
                                    ]
                                },
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "500": {
                "description": "Internal server error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "Error"
                                    ]
                                },
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "tags": [
          "relayer"
        ]
    }

}