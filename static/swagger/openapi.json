{
  "openapi": "3.0.0",
  "info": {
    "title": "Garden API",
    "version": "2.0.0"
  },
  "components": {
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "servers": [
    {
      "url": "https://evm-swapper-relay.onrender.com",
      "description": "Auth, Gasless, Orderbook server"
    },
    {
      "url":"https://quote-knrp.onrender.com",
      "description": "Quote server"
    }
  ],
  "security": [],
  "tags": [
    {
      "name": "Auth",
      "x-displayName": "Auth",
      "description": "The Auth API enables secure and seamless authentication using the Sign-In with Ethereum (`SIWE`) protocol. The `/auth/nonce` endpoint generates a unique nonce to ensure one-time usage and integrity. Users sign a message containing the nonce and other metadata with their Ethereum private key, then submit it to the `/auth/verify` endpoint for validation. This robust process ensures identity verification while maintaining the highest standards of security and decentralization."
    },
    {
      "name": "Quote",
      "x-displayName": "Quote",
      "description": "The Quote API provides a suite of endpoints designed to facilitate real-time pricing, attested quotes, and strategic pricing insights for cross-chain swaps. It includes endpoints such as `/fiat`, which offers the current USD price for a given order pair, and `/quote/attested`, providing a time-sensitive quote valid until a specific point. The `/quote/strategies` endpoint lists available strategies for swaps, while `/price` requests the quote server for the price of a particular order pair and amount. This group ensures efficient, reliable, and dynamic pricing for seamless cross-chain transactions."
    },
    {
      "name": "Orderbook",
      "x-displayName": "Orderbook",
      "description": "The `Orderbook` API provides robust endpoints for managing and tracking orders in the Garden ecosystem. It allows users to query both `unmatched` and `matched` orders, filtered by `all`, specific `user ID`s, or `order ID`s. Unmatched orders represent those initiated by users but not yet picked up by the Orderbook, while matched orders signify successful solver allocation."
    },
    {
      "name": "Gasless",
      "x-displayName": "Gasless",
      "description": "The `Gasless` API group streamlines the order lifecycle by offering endpoints for `order initiation`, `settlement`, `creation`, and `instant refunds`, all secured with `authentication`. This group eliminates the need for users to manage gas fees, enhancing accessibility and ease of use. By facilitating `HTLC`-based fund redemption and instant cancellations, it ensures a seamless, trustless, and user-friendly experience for cross-chain transactions."
    }
  ],
  "paths": {
    "/auth/nonce": {
      "$ref": "./auth/nonce.json"
    },
    "/auth/verify": {
      "$ref": "./auth/verify.json"
    },
    "/gasless/order/initiate": {
      "$ref": "./relayer/initiateSwapWithSign.json"
    },
    "/gasless/order/settlement": {
      "$ref": "./relayer/redeemSwap.json"
    },
    "/gasless/order": {
      "$ref": "./relayer/createOrder.json"
    },
    "/gasless/order/refund": {
      "$ref": "./relayer/instantRefund.json"
    },
    "/health": {
      "$ref": "./relayer/checkHealth.json"
    },
    "/orders/unmatched": {
      "$ref": "./auctionhouse/unmatchedOrders.json"
    },
    "/orders/matched": {
      "$ref": "./auctionhouse/matchedOrders.json"
    },
    "/orders/id/{id}/unmatched": {
      "$ref": "./auctionhouse/unmatchedOrdersById.json"
    },
    "/orders/id/{id}/matched": {
      "$ref": "./auctionhouse/matchedOrdersById.json"
    },
    "/orders/user/{user}/unmatched": {
      "$ref": "./auctionhouse/unmatchedOrdersByUser.json"
    },
    "/orders/user/{user}/matched": {
      "$ref": "./auctionhouse/matchedOrdersByUser.json"
    },
    "/orders/user/{user}/count": {
      "$ref": "./auctionhouse/ordersCountByUser.json"
    },
    "/fiat": {
      "$ref": "./quote/fiat.json"
    },
    "/quote/attested": {
      "$ref": "./quote/quote.json"
    },
    "/quote/strategies": {
      "$ref": "./quote/strategies.json"
    },
    "/price": {
      "$ref": "./quote/price.json"
    }
  }
}